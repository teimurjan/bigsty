# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-11-26 10:57
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'api_category_name',
            },
        ),
        migrations.CreateModel(
            name='FeatureType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categories', models.ManyToManyField(db_table='api_feature_type_x_category', related_name='feature_types', related_query_name='feature_type', to='api.Category')),
            ],
            options={
                'db_table': 'api_feature_type',
            },
        ),
        migrations.CreateModel(
            name='FeatureTypeName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'api_feature_type_name',
            },
        ),
        migrations.CreateModel(
            name='FeatureValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feature_values', related_query_name='feature_value', to='api.FeatureType')),
            ],
            options={
                'db_table': 'api_feature_value',
            },
        ),
        migrations.CreateModel(
            name='FeatureValueName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'api_feature_value_name',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('name', models.CharField(max_length=60, primary_key=True, serialize=False, unique=True)),
            ],
            options={
                'db_table': 'api_user_group',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('name', models.CharField(max_length=2, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.IntegerField(default=0)),
                ('price', models.IntegerField()),
                ('quantity', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='store/static/images/products/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', related_query_name='image', to='api.Product')),
            ],
            options={
                'db_table': 'api_product_image',
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, null=True, upload_to='store/static/images/products/main/')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_types', related_query_name='product_types', to='api.Category')),
            ],
            options={
                'db_table': 'api_product_type',
            },
        ),
        migrations.CreateModel(
            name='ProductTypeDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1000)),
                ('language', models.ForeignKey(db_column='language', on_delete=django.db.models.deletion.CASCADE, to='api.Language')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='descriptions', related_query_name='description', to='api.ProductType')),
            ],
            options={
                'db_table': 'api_product_type_description',
            },
        ),
        migrations.CreateModel(
            name='ProductTypeName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=50)),
                ('language', models.ForeignKey(db_column='language', on_delete=django.db.models.deletion.CASCADE, to='api.Language')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='names', related_query_name='name', to='api.ProductType')),
            ],
            options={
                'db_table': 'api_product_type_name',
            },
        ),
        migrations.CreateModel(
            name='ProductTypeShortDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
                ('language', models.ForeignKey(db_column='language', on_delete=django.db.models.deletion.CASCADE, to='api.Language')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='short_descriptions', related_query_name='short_description', to='api.ProductType')),
            ],
            options={
                'db_table': 'api_product_type_short_description',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=60)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('password', models.CharField(max_length=255)),
                ('token', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('group', models.ForeignKey(db_column='group', on_delete=django.db.models.deletion.CASCADE, related_name='users', related_query_name='user', to='api.Group')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='product',
            name='product_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', related_query_name='product', to='api.ProductType'),
        ),
        migrations.AddField(
            model_name='featurevaluename',
            name='language',
            field=models.ForeignKey(db_column='language', on_delete=django.db.models.deletion.CASCADE, to='api.Language'),
        ),
        migrations.AddField(
            model_name='featurevaluename',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='names', related_query_name='name', to='api.FeatureValue'),
        ),
        migrations.AddField(
            model_name='featurevalue',
            name='product_types',
            field=models.ManyToManyField(db_table='api_feature_value_x_product_type', related_name='feature_values', related_query_name='feature_value', to='api.ProductType'),
        ),
        migrations.AddField(
            model_name='featurevalue',
            name='products',
            field=models.ManyToManyField(db_table='api_feature_value_x_product', related_name='feature_values', related_query_name='feature_value', to='api.Product'),
        ),
        migrations.AddField(
            model_name='featuretypename',
            name='language',
            field=models.ForeignKey(db_column='language', on_delete=django.db.models.deletion.CASCADE, to='api.Language'),
        ),
        migrations.AddField(
            model_name='featuretypename',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='names', related_query_name='name', to='api.FeatureType'),
        ),
        migrations.AddField(
            model_name='categoryname',
            name='language',
            field=models.ForeignKey(db_column='language', on_delete=django.db.models.deletion.CASCADE, to='api.Language'),
        ),
        migrations.AddField(
            model_name='categoryname',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='names', related_query_name='name', to='api.Category'),
        ),
    ]
